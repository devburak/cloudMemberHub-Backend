name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        mongodb-version: ['4.4', '5.0', '6.0']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB ${{ matrix.mongodb-version }}
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-replica-set: test-rs
        mongodb-port: 27017
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test:coverage
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/cloudmemberhub_test
        JWT_SECRET: test-jwt-secret-key
        JWT_REFRESH_SECRET: test-refresh-secret-key
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x' && matrix.mongodb-version == '5.0'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: |
        if [ -f "npm run build" ]; then
          npm run build
        else
          echo "No build script found, skipping build step"
        fi

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level high; then
          echo "No high-severity vulnerabilities found"
        else
          echo "High-severity vulnerabilities found!"
          exit 1
        fi

  quality:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check formatting
      run: npm run format:check
    
    - name: Run linting with error reporting
      run: npm run lint -- --format=junit --output-file=./reports/eslint-report.xml
      continue-on-error: true
    
    - name: Archive lint results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: lint-results
        path: reports/

  pr-checks:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check PR title format
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore|perf)(\(.+\))?: .+ ]]; then
          echo "PR title does not follow conventional commits format!"
          echo "Format: type(scope): description"
          echo "Types: feat, fix, docs, style, refactor, test, chore, perf"
          exit 1
        fi
    
    - name: Check for PR template
      run: |
        if [ ! -s "${{ github.event.pull_request.body }}" ]; then
          echo "PR body is empty! Please fill out the PR template."
          exit 1
        fi
    
    - name: Label PR
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"